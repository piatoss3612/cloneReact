{"version":3,"file":"bundle.js","mappings":"mBAGA,ICHO,MACL,GACA,GACA,GACA,GACA,GACA,GACA,IAAY,EACZ,IAAa,EAEbA,cACEC,MAAK,IACLA,MAAK,IAGP,KACEA,MAAK,EAAeC,SAASC,eAAe,aAC5CF,MAAK,EAAYA,MAAK,EAAaG,cAAc,WACjDH,MAAK,EAAgBA,MAAK,EAAaG,cAAc,SACrDH,MAAK,EAAcA,MAAK,EAAaG,cAAc,aACnDH,MAAK,EAAgBA,MAAK,EAAaG,cAAc,gBACrDH,MAAK,EAAWA,MAAK,EAAcG,cAAc,UAGnD,KACEH,MAAK,EAAUI,iBAAiB,SAAUJ,MAAK,GAC/CA,MAAK,EAAcI,iBAAiB,SAAUJ,MAAK,GACnDC,SAASG,iBAAiB,UAAWJ,MAAK,GAC1CC,SAASG,iBAAiB,QAASJ,MAAK,GACxCA,MAAK,EAASI,iBAAiB,QAASJ,MAAK,GAC7CA,MAAK,EAAYI,iBAAiB,YAAaJ,MAAK,GACpDC,SAASG,iBAAiB,UAAWJ,MAAK,GAG5C,GAAkBK,IAChBJ,SAASK,gBAAgBC,aACvB,QACAF,EAAMG,OAAOC,QAAU,YAAc,KAIzC,GAAiBJ,IACfJ,SAASS,KAAKC,MAAMC,WAAaP,EAAMG,OAAOK,OAGhD,GAAcR,IACRL,MAAK,IACTA,MAAK,GAAY,EACjBA,MAAK,EAAcc,UAAUC,OAC3B,QACA,gBAAgBC,KAAKX,EAAMY,MAAsB,YAAdZ,EAAMY,KAE3CjB,MAAK,EACFG,cAAc,cAAcE,EAAMa,UACjCJ,UAAUK,IAAI,YAGpB,GAAYd,IACNL,MAAK,IACTA,MAAK,GAAY,EACjBA,MAAK,EACFG,cAAc,cAAcE,EAAMa,UACjCJ,UAAUM,OAAO,YAGvB,GAAYf,IACVA,EAAMG,OAAOK,MAAQR,EAAMG,OAAOK,MAAMQ,QAAQ,gBAAiB,KAGnE,GAAgBhB,IACVL,MAAK,IACTA,MAAK,GAAa,EAClBK,EAAMG,OAAOc,QAAQ,YAAYR,UAAUK,IAAI,YAGjD,GAAcd,IACZ,GAAIL,MAAK,EAAW,OACpBA,MAAK,GAAa,EAClB,MAAMuB,EAAQlB,EAAMG,OAAOc,QAAQ,WAC7BE,IAAaD,GAAOT,UAAUW,SAAS,UACvCC,EAAMH,GAAOI,QAAQD,IACvBF,GAAcE,GAAe,UAARA,GAA2B,cAARA,IAC1C1B,MAAK,EAASa,OAASa,GAErBF,GAAoB,UAARE,IACd1B,MAAK,EAASa,OAAS,KAErBW,GAAoB,cAARE,IACd1B,MAAK,EAASa,MAAQb,MAAK,EAASa,MAAMe,MAAM,GAAI,IAEtD5B,MAAK,EAAYG,cAAc,YAAYW,UAAUM,OAAO,a","sources":["webpack://virtual-keyboard/./src/js/index.js","webpack://virtual-keyboard/./src/js/keyboard.js"],"sourcesContent":["import \"../css/style.css\";\r\nimport { Keyboard } from \"./keyboard\";\r\n\r\nnew Keyboard();\r\n","export class Keyboard {\r\n  #containerEl;\r\n  #switchEl;\r\n  #fontSelectEl;\r\n  #keyboardEl;\r\n  #inputGroupEl;\r\n  #inputEl;\r\n  #keyPress = false;\r\n  #mouseDown = false;\r\n\r\n  constructor() {\r\n    this.#assignElement();\r\n    this.#addEvent();\r\n  }\r\n\r\n  #assignElement() {\r\n    this.#containerEl = document.getElementById(\"container\");\r\n    this.#switchEl = this.#containerEl.querySelector(\"#switch\");\r\n    this.#fontSelectEl = this.#containerEl.querySelector(\"#font\");\r\n    this.#keyboardEl = this.#containerEl.querySelector(\"#keyboard\");\r\n    this.#inputGroupEl = this.#containerEl.querySelector(\"#input-group\");\r\n    this.#inputEl = this.#inputGroupEl.querySelector(\"#input\");\r\n  }\r\n\r\n  #addEvent() {\r\n    this.#switchEl.addEventListener(\"change\", this.#onChangeTheme);\r\n    this.#fontSelectEl.addEventListener(\"change\", this.#onChangeFont);\r\n    document.addEventListener(\"keydown\", this.#onKeyDown);\r\n    document.addEventListener(\"keyup\", this.#onKeyUp);\r\n    this.#inputEl.addEventListener(\"input\", this.#onInput);\r\n    this.#keyboardEl.addEventListener(\"mousedown\", this.#onMouseDown);\r\n    document.addEventListener(\"mouseup\", this.#onMouseUp);\r\n  }\r\n\r\n  #onChangeTheme = (event) => {\r\n    document.documentElement.setAttribute(\r\n      \"theme\",\r\n      event.target.checked ? \"dark-mode\" : \"\"\r\n    );\r\n  };\r\n\r\n  #onChangeFont = (event) => {\r\n    document.body.style.fontFamily = event.target.value;\r\n  };\r\n\r\n  #onKeyDown = (event) => {\r\n    if (this.#mouseDown) return;\r\n    this.#keyPress = true;\r\n    this.#inputGroupEl.classList.toggle(\r\n      \"error\",\r\n      /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/.test(event.key) || event.key === \"Process\"\r\n    );\r\n    this.#keyboardEl\r\n      .querySelector(`[data-code=${event.code}]`)\r\n      ?.classList.add(\"active\");\r\n  };\r\n\r\n  #onKeyUp = (event) => {\r\n    if (this.#mouseDown) return;\r\n    this.#keyPress = false;\r\n    this.#keyboardEl\r\n      .querySelector(`[data-code=${event.code}]`)\r\n      ?.classList.remove(\"active\");\r\n  };\r\n\r\n  #onInput = (event) => {\r\n    event.target.value = event.target.value.replace(/[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/, \"\");\r\n  };\r\n\r\n  #onMouseDown = (event) => {\r\n    if (this.#keyPress) return;\r\n    this.#mouseDown = true;\r\n    event.target.closest(\"div.key\")?.classList.add(\"active\");\r\n  };\r\n\r\n  #onMouseUp = (event) => {\r\n    if (this.#keyPress) return;\r\n    this.#mouseDown = false;\r\n    const keyEl = event.target.closest(\"div.key\");\r\n    const isActive = !!keyEl?.classList.contains(\"active\");\r\n    const val = keyEl?.dataset.val;\r\n    if (isActive && !!val && val !== \"Space\" && val !== \"Backspace\") {\r\n      this.#inputEl.value += val;\r\n    }\r\n    if (isActive && val === \"Space\") {\r\n      this.#inputEl.value += \" \";\r\n    }\r\n    if (isActive && val === \"Backspace\") {\r\n      this.#inputEl.value = this.#inputEl.value.slice(0, -1);\r\n    }\r\n    this.#keyboardEl.querySelector(\".active\")?.classList.remove(\"active\");\r\n  };\r\n}\r\n"],"names":["constructor","this","document","getElementById","querySelector","addEventListener","event","documentElement","setAttribute","target","checked","body","style","fontFamily","value","classList","toggle","test","key","code","add","remove","replace","closest","keyEl","isActive","contains","val","dataset","slice"],"sourceRoot":""}