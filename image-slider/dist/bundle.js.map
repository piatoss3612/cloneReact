{"version":3,"file":"bundle.js","mappings":"mBAGe,ICHA,MACb,GAAmB,EAEnB,GAAe,EAEf,GAAc,EAEd,GAEA,IAAY,EAEZA,aAEAC,aAEAC,UAEAC,cAEAC,gBAEAC,cAEAC,cACEC,KAAKC,gBACLD,KAAKE,mBACLF,KAAKG,iBACLH,KAAKI,sBACLJ,KAAKK,WACLL,KAAKM,kBACLN,KAAKO,eACLP,KAAKQ,eAGPP,gBACED,KAAKP,aAAegB,SAASC,eAAe,eAC5CV,KAAKN,aAAeM,KAAKP,aAAakB,cAAc,WACpDX,KAAKL,UAAYK,KAAKP,aAAakB,cAAc,SACjDX,KAAKJ,cAAgBI,KAAKP,aAAakB,cAAc,aACrDX,KAAKH,gBAAkBG,KAAKP,aAAakB,cAAc,mBACvDX,KAAKF,cAAgBE,KAAKP,aAAakB,cAAc,iBAGvDT,iBAAmB,KACjBF,MAAK,EAAeA,KAAKN,aAAakB,iBAAiB,MAAMC,QAG/DV,eAAiB,KACfH,MAAK,EAAcA,KAAKP,aAAaqB,aAGvCV,oBAAsB,KACpBJ,KAAKN,aAAaqB,MAAMC,MAAWhB,MAAK,EAAeA,MAAK,EAA5B,MAGlCQ,aAAe,KACbR,MAAK,EAAciB,YAAYjB,KAAKkB,YAAa,MAGnDb,WACEL,KAAKL,UAAUwB,iBAAiB,QAASnB,KAAKkB,aAC9ClB,KAAKJ,cAAcuB,iBAAiB,QAASnB,KAAKoB,YAClDpB,KAAKH,gBAAgBsB,iBAAiB,QAASnB,KAAKqB,kBACpDrB,KAAKF,cAAcqB,iBAAiB,QAASnB,KAAKsB,YAGpDJ,YAAc,KACZlB,MAAK,GAAoB,EACrBA,MAAK,IAAqBA,MAAK,IACjCA,MAAK,EAAmB,GAE1BA,KAAKN,aAAaqB,MAAMQ,KAAO,IAC7BvB,MAAK,EAAcA,MAAK,MAE1BA,KAAKwB,kBACLxB,KAAKO,gBAGPa,WAAa,KACXpB,MAAK,GAAoB,GACM,IAA3BA,MAAK,IACPA,MAAK,EAAmBA,MAAK,EAAe,GAE9CA,KAAKN,aAAaqB,MAAMQ,KAAO,IAC7BvB,MAAK,EAAcA,MAAK,MAE1BA,KAAKwB,kBACLxB,KAAKO,gBAGPD,gBAAkB,KAChB,MAAMmB,EAAchB,SAASiB,yBAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAI3B,MAAK,EAAc2B,GAAK,EAAG,CAC7C,MAAMC,EAAKnB,SAASoB,cAAc,MAClCD,EAAGE,QAAQC,MAAQJ,EACnBF,EAAYO,YAAYJ,GAE1B5B,KAAKH,gBAAgBc,cAAc,MAAMqB,YAAYP,IAGvDlB,aAAe,KACbP,KAAKH,gBAAgBc,cAAc,cAAcsB,UAAUC,OAAO,UAClElC,KAAKH,gBACFc,cAAc,mBAAmBX,MAAK,EAAmB,MACzDiC,UAAUE,IAAI,WAGnBd,iBAAmBe,IACjB,MAAMC,EAAgBC,SAASF,EAAMG,OAAOT,QAAQC,MAAO,IACvDS,OAAOC,UAAUJ,KACnBrC,MAAK,EAAmBqC,EACxBrC,KAAKN,aAAaqB,MAAMQ,KAAO,IAC7BvB,MAAK,EAAcA,MAAK,MAE1BA,KAAKO,iBAITe,WAAac,IACyB,SAAhCA,EAAMG,OAAOT,QAAQY,QACvB1C,MAAK,GAAY,EACjBA,KAAKF,cAAcmC,UAAUE,IAAI,QACjCnC,KAAKF,cAAcmC,UAAUC,OAAO,SACpClC,KAAKQ,gBACoC,UAAhC4B,EAAMG,OAAOT,QAAQY,SAC9B1C,MAAK,GAAY,EACjBA,KAAKF,cAAcmC,UAAUE,IAAI,SACjCnC,KAAKF,cAAcmC,UAAUC,OAAO,QACpCS,cAAc3C,MAAK,KAIvBwB,gBAAkB,KACZxB,MAAK,IACP2C,cAAc3C,MAAK,GACnBA,MAAK,EAAciB,YAAYjB,KAAKkB,YAAa,S","sources":["webpack://image-slider/./src/js/index.js","webpack://image-slider/./src/js/ImageSlider.js"],"sourcesContent":["import '../css/style.css';\nimport Slider from './ImageSlider';\n\nconst slider = new Slider();\n","export default class ImageSlider {\r\n  #currentPosition = 0;\r\n\r\n  #slideNumber = 0;\r\n\r\n  #slideWidth = 0;\r\n\r\n  #intervalId;\r\n\r\n  #autoPlay = true;\r\n\r\n  sliderWrapEl;\r\n\r\n  sliderListEl;\r\n\r\n  nextBtnEl;\r\n\r\n  previousBtnEl;\r\n\r\n  indicatorWrapEl;\r\n\r\n  controlWrapEl;\r\n\r\n  constructor() {\r\n    this.assignElement();\r\n    this.initSliderNumber();\r\n    this.initSlideWidth();\r\n    this.initSliderListWidth();\r\n    this.addEvent();\r\n    this.createIndicator();\r\n    this.setIndicator();\r\n    this.initAutoPlay();\r\n  }\r\n\r\n  assignElement() {\r\n    this.sliderWrapEl = document.getElementById('slider-wrap');\r\n    this.sliderListEl = this.sliderWrapEl.querySelector('#slider');\r\n    this.nextBtnEl = this.sliderWrapEl.querySelector('#next');\r\n    this.previousBtnEl = this.sliderWrapEl.querySelector('#previous');\r\n    this.indicatorWrapEl = this.sliderWrapEl.querySelector('#indicator-wrap');\r\n    this.controlWrapEl = this.sliderWrapEl.querySelector('#control-wrap');\r\n  }\r\n\r\n  initSliderNumber = () => {\r\n    this.#slideNumber = this.sliderListEl.querySelectorAll('li').length;\r\n  };\r\n\r\n  initSlideWidth = () => {\r\n    this.#slideWidth = this.sliderWrapEl.clientWidth;\r\n  };\r\n\r\n  initSliderListWidth = () => {\r\n    this.sliderListEl.style.width = `${this.#slideNumber * this.#slideWidth}px`;\r\n  };\r\n\r\n  initAutoPlay = () => {\r\n    this.#intervalId = setInterval(this.moveToRight, 3000);\r\n  };\r\n\r\n  addEvent() {\r\n    this.nextBtnEl.addEventListener('click', this.moveToRight);\r\n    this.previousBtnEl.addEventListener('click', this.moveToLeft);\r\n    this.indicatorWrapEl.addEventListener('click', this.onClickIndicator);\r\n    this.controlWrapEl.addEventListener('click', this.togglePlay);\r\n  }\r\n\r\n  moveToRight = () => {\r\n    this.#currentPosition += 1;\r\n    if (this.#currentPosition === this.#slideNumber) {\r\n      this.#currentPosition = 0;\r\n    }\r\n    this.sliderListEl.style.left = `-${\r\n      this.#slideWidth * this.#currentPosition\r\n    }px`;\r\n    this.restartAutoPlay();\r\n    this.setIndicator();\r\n  };\r\n\r\n  moveToLeft = () => {\r\n    this.#currentPosition -= 1;\r\n    if (this.#currentPosition === -1) {\r\n      this.#currentPosition = this.#slideNumber - 1;\r\n    }\r\n    this.sliderListEl.style.left = `-${\r\n      this.#slideWidth * this.#currentPosition\r\n    }px`;\r\n    this.restartAutoPlay();\r\n    this.setIndicator();\r\n  };\r\n\r\n  createIndicator = () => {\r\n    const docFragment = document.createDocumentFragment();\r\n    for (let i = 0; i < this.#slideNumber; i += 1) {\r\n      const li = document.createElement('li');\r\n      li.dataset.index = i;\r\n      docFragment.appendChild(li);\r\n    }\r\n    this.indicatorWrapEl.querySelector('ul').appendChild(docFragment);\r\n  };\r\n\r\n  setIndicator = () => {\r\n    this.indicatorWrapEl.querySelector('li.active')?.classList.remove('active');\r\n    this.indicatorWrapEl\r\n      .querySelector(`ul li:nth-child(${this.#currentPosition + 1})`)\r\n      .classList.add('active');\r\n  };\r\n\r\n  onClickIndicator = event => {\r\n    const indexPosition = parseInt(event.target.dataset.index, 10);\r\n    if (Number.isInteger(indexPosition)) {\r\n      this.#currentPosition = indexPosition;\r\n      this.sliderListEl.style.left = `-${\r\n        this.#slideWidth * this.#currentPosition\r\n      }px`;\r\n      this.setIndicator();\r\n    }\r\n  };\r\n\r\n  togglePlay = event => {\r\n    if (event.target.dataset.status === 'play') {\r\n      this.#autoPlay = true;\r\n      this.controlWrapEl.classList.add('play');\r\n      this.controlWrapEl.classList.remove('pause');\r\n      this.initAutoPlay();\r\n    } else if (event.target.dataset.status === 'pause') {\r\n      this.#autoPlay = false;\r\n      this.controlWrapEl.classList.add('pause');\r\n      this.controlWrapEl.classList.remove('play');\r\n      clearInterval(this.#intervalId);\r\n    }\r\n  };\r\n\r\n  restartAutoPlay = () => {\r\n    if (this.#autoPlay) {\r\n      clearInterval(this.#intervalId);\r\n      this.#intervalId = setInterval(this.moveToRight, 3000);\r\n    }\r\n  };\r\n}\r\n"],"names":["sliderWrapEl","sliderListEl","nextBtnEl","previousBtnEl","indicatorWrapEl","controlWrapEl","constructor","this","assignElement","initSliderNumber","initSlideWidth","initSliderListWidth","addEvent","createIndicator","setIndicator","initAutoPlay","document","getElementById","querySelector","querySelectorAll","length","clientWidth","style","width","setInterval","moveToRight","addEventListener","moveToLeft","onClickIndicator","togglePlay","left","restartAutoPlay","docFragment","createDocumentFragment","i","li","createElement","dataset","index","appendChild","classList","remove","add","event","indexPosition","parseInt","target","Number","isInteger","status","clearInterval"],"sourceRoot":""}